"""Local File Inclusion vulnerability check"""

import re
from ..config import LFI_PAYLOADS, LFI_UNIX_PATTERN, LFI_WINDOWS_PATTERN
from ..utils.url_parser import parse_url_params

def check_lfi(request_handler, url):
    """Test for Local File Inclusion (LFI) vulnerabilities"""
    print(f"[*] Testing LFI: {url}")
    
    base_url, params = parse_url_params(url)
    if not params:
        return None
    
    for param, value in params.items():
        for payload in LFI_PAYLOADS:
            test_params = params.copy()
            test_params[param] = payload
            
            response = request_handler.get(base_url, params=test_params)
            if not response:
                continue
            
            if re.search(LFI_UNIX_PATTERN, response.text) or \
               re.search(LFI_WINDOWS_PATTERN, response.text):
                print(f"    [+] FOUND: LFI in parameter '{param}'")
                return {
                    'type': 'Local File Inclusion (LFI)',
                    'severity': 'CRITICAL',
                    'url': base_url,
                    'parameter': param,
                    'payload': payload
                }
    
    return None