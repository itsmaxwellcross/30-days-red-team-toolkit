"""Remote Code Execution vulnerability check"""

import re
from ..config import RCE_PAYLOADS, RCE_PATTERNS
from ..utils.url_parser import parse_url_params

def check_rce(request_handler, url):
    """Test for Remote Code Execution vulnerabilities"""
    print(f"[*] Testing RCE: {url}")
    
    base_url, params = parse_url_params(url)
    if not params:
        return None
    
    for param, value in params.items():
        for payload in RCE_PAYLOADS:
            test_params = params.copy()
            test_params[param] = payload
            
            response = request_handler.get(base_url, params=test_params)
            if not response:
                continue
            
            for pattern in RCE_PATTERNS:
                if re.search(pattern, response.text, re.IGNORECASE):
                    print(f"    [+] FOUND: RCE in parameter '{param}'")
                    return {
                        'type': 'Remote Code Execution (RCE)',
                        'severity': 'CRITICAL',
                        'url': base_url,
                        'parameter': param,
                        'payload': payload
                    }
    
    return None