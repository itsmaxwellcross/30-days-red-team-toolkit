"""Handle communication with remote shell"""

import socket
from ..config import SOCKET_TIMEOUT, RECV_BUFFER_SIZE

class Communicator:
    """Send commands and receive output from remote shell"""
    
    def __init__(self, client_socket):
        self.client_socket = client_socket
    
    def send_command(self, command):
        """Send command to remote shell"""
        try:
            self.client_socket.send(command.encode() + b'\n')
            return True
        except:
            return False
    
    def receive_output(self, timeout=SOCKET_TIMEOUT):
        """Receive output from remote shell"""
        self.client_socket.settimeout(timeout)
        output = b''
        
        try:
            while True:
                chunk = self.client_socket.recv(RECV_BUFFER_SIZE)
                if not chunk:
                    break
                output += chunk
        except socket.timeout:
            pass
        except:
            return None
        
        return output.decode(errors='ignore')
    
    def execute_command(self, command, timeout=SOCKET_TIMEOUT):
        """Execute command and return output"""
        if not self.send_command(command):
            return None
        return self.receive_output(timeout)