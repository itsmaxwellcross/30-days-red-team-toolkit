"""Socket listener for incoming connections"""

import socket
from datetime import datetime
from ..config import SOCKET_TIMEOUT

class Listener:
    """Listen for incoming reverse shell connections"""
    
    def __init__(self, lhost, lport):
        self.lhost = lhost
        self.lport = lport
        self.client_socket = None
        self.client_address = None
    
    def start(self):
        """Start listening for incoming connections"""
        server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        server_socket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        
        try:
            server_socket.bind((self.lhost, self.lport))
            server_socket.listen(1)
            
            print(f"[*] Listening on {self.lhost}:{self.lport}")
            print(f"[*] Waiting for connection...")
            print(f"[*] Started: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
            
            self.client_socket, self.client_address = server_socket.accept()
            
            print(f"[+] Connection received from {self.client_address[0]}:{self.client_address[1]}")
            print(f"[*] Time: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
            
            return True
            
        except Exception as e:
            print(f"[-] Error starting listener: {e}")
            return False
    
    def get_connection(self):
        """Get the client socket and address"""
        return self.client_socket, self.client_address
    
    def close(self):
        """Close the connection"""
        if self.client_socket:
            self.client_socket.close()