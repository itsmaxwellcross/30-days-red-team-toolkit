"""Comprehensive situational awareness"""

from ..config import RECON_COMMANDS, MAX_OUTPUT_LINES

class SituationalAwareness:
    """Gather comprehensive information about compromised system"""
    
    def __init__(self, communicator):
        self.communicator = communicator
    
    def run_full_recon(self):
        """Run complete situational awareness"""
        print("\n" + "=" * 60)
        print("SITUATIONAL AWARENESS")
        print("=" * 60 + "\n")
        
        for description, command in RECON_COMMANDS.items():
            print(f"\n[*] {description}:")
            print("-" * 40)
            
            output = self.communicator.execute_command(command, timeout=5)
            
            if output:
                self._print_output(output)
            else:
                print("(no output)")
    
    def _print_output(self, output):
        """Print output with truncation for long results"""
        lines = output.strip().split('\n')
        
        if len(lines) > MAX_OUTPUT_LINES:
            print('\n'.join(lines[:MAX_OUTPUT_LINES]))
            print(f"... ({len(lines) - MAX_OUTPUT_LINES} more lines)")
        else:
            print(output)