"""Generate exploitation reports"""

class ReportGenerator:
    """Generate comprehensive exploitation reports"""
    
    def __init__(self, target):
        self.target = target
    
    def generate_report(self, results):
        """Generate exploitation report"""
        print("\n" + "=" * 60)
        print("EXPLOITATION REPORT")
        print("=" * 60 + "\n")
        
        if not results:
            print("[*] No successful exploitations")
            return
        
        print(f"[+] Successfully exploited {len(results)} services:\n")
        
        # Print summary
        for result in results:
            self._print_result_summary(result)
        
        # Print next steps
        print("-" * 60)
        print("\nNext Steps:")
        
        for result in results:
            self._print_next_steps(result)
    
    def _print_result_summary(self, result):
        """Print summary for a single result"""
        print(f"[{result['service']}] Port {result['port']}")
        
        if 'username' in result and 'password' in result:
            print(f"  Credentials: {result['username']}:{result['password']}")
        
        if 'vulnerability' in result:
            print(f"  Vulnerability: {result['vulnerability']}")
        
        if 'writable' in result:
            print(f"  Writable: {result['writable']}")
        
        if 'databases' in result:
            print(f"  Databases: {', '.join(result['databases'][:5])}")
        
        print()
    
    def _print_next_steps(self, result):
        """Print next steps for a specific service"""
        service = result['service']
        
        if service == 'SSH':
            print(f"\n[SSH - Port {result['port']}]")
            print(f"  ssh {result['username']}@{self.target} -p {result['port']}")
            print(f"  Password: {result['password']}")
        
        elif service == 'FTP':
            print(f"\n[FTP - Port {result['port']}]")
            print(f"  ftp {self.target} {result['port']}")
            print(f"  Username: anonymous")
            if result.get('writable'):
                print(f"  → Upload web shell to /var/www/html/")
        
        elif service == 'MySQL':
            print(f"\n[MySQL - Port {result['port']}]")
            print(f"  mysql -h {self.target} -u {result['username']} -p{result['password']}")
            print(f"  → Extract sensitive data")
            print(f"  → Attempt UDF privilege escalation")
        
        elif service == 'PostgreSQL':
            print(f"\n[PostgreSQL - Port {result['port']}]")
            print(f"  psql -h {self.target} -U {result['username']} -d postgres")
            print(f"  → Extract data")
            print(f"  → Try CVE-2019-9193 (copy from program)")
        
        elif service == 'SMB':
            print(f"\n[SMB - Port {result['port']}]")
            print(f"  smbclient -L //{self.target} -N")
            print(f"  → Map shares and extract data")
            print(f"  → Look for passwords in files")
        
        elif service == 'Telnet':
            print(f"\n[Telnet - Port {result['port']}]")
            print(f"  telnet {self.target} {result['port']}")
            print(f"  Credentials: {result['username']}:{result['password']}")